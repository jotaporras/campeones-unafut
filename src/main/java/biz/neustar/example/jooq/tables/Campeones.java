/**
 * This class is generated by jOOQ
 */
package biz.neustar.example.jooq.tables;


import biz.neustar.example.jooq.Keys;
import biz.neustar.example.jooq.Unafut;
import biz.neustar.example.jooq.tables.records.CampeonesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Campeones extends TableImpl<CampeonesRecord> {

	private static final long serialVersionUID = 649729704;

	/**
	 * The reference instance of <code>unafut.campeones</code>
	 */
	public static final Campeones CAMPEONES = new Campeones();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CampeonesRecord> getRecordType() {
		return CampeonesRecord.class;
	}

	/**
	 * The column <code>unafut.campeones.id</code>.
	 */
	public final TableField<CampeonesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>unafut.campeones.temporada</code>.
	 */
	public final TableField<CampeonesRecord, String> TEMPORADA = createField("temporada", org.jooq.impl.SQLDataType.VARCHAR.length(13).nullable(false), this, "");

	/**
	 * The column <code>unafut.campeones.campeon_id</code>.
	 */
	public final TableField<CampeonesRecord, Integer> CAMPEON_ID = createField("campeon_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>unafut.campeones</code> table reference
	 */
	public Campeones() {
		this("campeones", null);
	}

	/**
	 * Create an aliased <code>unafut.campeones</code> table reference
	 */
	public Campeones(String alias) {
		this(alias, CAMPEONES);
	}

	private Campeones(String alias, Table<CampeonesRecord> aliased) {
		this(alias, aliased, null);
	}

	private Campeones(String alias, Table<CampeonesRecord> aliased, Field<?>[] parameters) {
		super(alias, Unafut.UNAFUT, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CampeonesRecord> getPrimaryKey() {
		return Keys.KEY_CAMPEONES_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CampeonesRecord>> getKeys() {
		return Arrays.<UniqueKey<CampeonesRecord>>asList(Keys.KEY_CAMPEONES_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Campeones as(String alias) {
		return new Campeones(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Campeones rename(String name) {
		return new Campeones(name, null);
	}
}
